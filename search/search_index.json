{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>pip install materialx.emoji# Homepage</p>"},{"location":"#redirecting-to-login","title":"Redirecting to Login","text":"Redirecting... <p>If you are not redirected, click here.</p>"},{"location":"Forms/","title":"Forms","text":""},{"location":"Forms/#buscar-dados-form-interno","title":"Buscar dados Form Interno","text":"<p>Todo formul\u00e1rio interno ( o qual constru\u00edmos via eclipse) ele sempre ir\u00e1 possuir um dataset que guardar seus registros no fluig. Dessa forma, \u00e9 poss\u00edvel pegar seus dados consultando esse dataset do formul\u00e1rio. <pre><code>var datasetFormIterno = DatasetFactory.getDataset('dsformProcessoExtra', null, null, null).values\n        let codigos_Descricoes = datasetFormIterno.map(item =&gt; item['codigoEDescricao'])\n</code></pre> No c\u00f3digo acima estou buscando meu dataset sem filtros, e logo em seguida inicio um <code>map</code> para me retornar os valores da coluna <code>codigoEDescricao</code>. Posso preencher esses valores em um select com um <code>for</code> por exemplo. <pre><code>  for(let i = 0; i &lt; codigos_Descricoes.length; i++) {\n            $(\"#selecionar_o_movimento\").append('&lt;option&gt;' + codigos_Descricoes[i] + '&lt;/option&gt;');\n        }\n</code></pre></p>"},{"location":"Forms/#restricoes-em-name-e-ids","title":"Restri\u00e7\u00f5es em Name e Id's","text":"<ul> <li>Names e Ids dos campos n\u00e3o podem ter mais de 30 caracteres</li> <li>Em algumas ocasi\u00f5es os campos precisam ser mais bem especificados para serem encontrados (ex : <code>$(\"input[type=radio][name:_check_validacao _documentacao]:checked\").val();</code></li> <li>Em alguns casos o enableFields pode bloquear o campo em um passo espec\u00edfico, ser\u00e1 preciso adicionar o <code>UNDERLINE(_)</code>, pois, o seu NAME foi modificado, Como no caso ACIMA.</li> <li>Radios precisam ter o mesmo <code>Name</code> e o <code>For = Id</code></li> </ul>"},{"location":"Forms/#como-o-formulario-e-armazenado","title":"Como o formul\u00e1rio \u00e9 armazenado","text":"<p>Quando em armazenado em tabelas de banco dados, cada campo do formul\u00e1rio vira uma coluna com o mesmo nome.</p> <p>Isso gera duas limita\u00e7\u00f5es quanto ao nome dos campos:</p> <ul> <li> O tamanho do nome, que \u00e9 limitado \u00e0 30 caracteres; </li> <li> Os bancos de dados possuem palavras reservadas, que n\u00e3o podem ser usadas como nome das colunas. Abaixo \u00e9 apresentada uma lista de termos reservados (al\u00e9m de alguns campos que s\u00e3o usados internamente para o v\u00ednculo ao registro do formul\u00e1rio):   <pre><code>\"ABSOLUTE\", \"ACCESS\", \"ACCESSIBLE\", \"ACCOUNT\", \"ACTION\", \"ACTIVATE\", \"ADD\",\n\"ADMIN\", \"ADVISE\", \"AFTER\", \"AGGREGATE\", \"ALIAS\", \"ALL\", \"ALLOCATE\", \"ALL_ROWS\", \"ALTER\", \"ANALYZE\", \"AND\",\n\"ANY\", \"ARCHIVE\", \"ARCHIVELOG\", \"ARE\", \"ARRAY\", \"AS\", \"ASC\", \"ASENSITIVE\", \"ASSERTION\", \"AT\", \"AUDIT\",\n...\n</code></pre> </li> </ul> <p>Informa\u00e7\u00f5es Importantes <pre><code>Independente da quantidade de vers\u00f5es de um formul\u00e1rio, sempre \u00e9 utilizada a mesma tabela. Assim, em um formul\u00e1rio com 50 vers\u00f5es, ter\u00e3o registros de formul\u00e1rios, possivelmente, das 50 vers\u00f5es do formul\u00e1rio.\n</code></pre> <pre><code>Todos os campos do formul\u00e1rio fluig possuem um limite de 4000 caracteres.\n</code></pre> Quantidade de campos por formul\u00e1rio <pre><code>1000 campos por linha\n</code></pre> <code>Pode acontecer que em alguma vers\u00e3o os campos estejam ocupando espa\u00e7o na tabela e impedindo a cria\u00e7\u00e3o de novos campos.</code></p>"},{"location":"Forms/#eventos-de-formulario","title":"Eventos de formul\u00e1rio","text":"<p>Para criar um evento de formul\u00e1rio veja em Como fazer?</p>"},{"location":"Forms/#displayfields","title":"displayFields","text":"<p>Por padr\u00e3o tem esse come\u00e7o <pre><code>function displayFields(form, customHTML) {\n    var activity = getValue('WKNumState');\n}\n</code></pre> Parte Inicial do processo sempre vai ser 0 ou 4 <pre><code> if (activity == 0 || activity == 4) {\n    }\n</code></pre> Em seguida voc\u00ea pode esconder ou deixar os campos vis\u00edveis <pre><code> if (activity == 0 || activity == 4) {\nform.setVisibleById('txtReqJustificativa', true);   Vis\u00edvel\nform.setVisibleById('txtReqContrato', false);   N\u00e3o Vis\u00edvel\n}\n</code></pre> \u00c9 poss\u00edvel utilizar o javascript dentro do displayFields e para isso se utiliza o customHTML <pre><code>    if (activity == 10) {\n        customHTML.append(\"&lt;script&gt;\");\n        customHTML.append(\"function teste() { return 'teste' };\");\n        customHTML.append(\"&lt;/script&gt;\");\n    }\n</code></pre> Outro exemplo do uso do javaScript  <pre><code>    if (activity == 18) {\n        customHTML.append(\"&lt;script&gt;\");\n        customHTML.append(\"$('#collapse_habilitar_dados').addClass('in');\");\n        customHTML.append(\"&lt;/script&gt;\");\n    }\n</code></pre></p>"},{"location":"Forms/#enablefields","title":"enableFields","text":"<p>Come\u00e7o Padr\u00e3o <pre><code>function enableFields(form) {\n  var activity = getValue(\"WKNumState\");\n  }\n</code></pre> Geralmente todos os campos s\u00e3o desabilitados no come\u00e7o <pre><code>function enableFields(form) {\n  var activity = getValue(\"WKNumState\");\n  form.setEnabled(\"nome_completo\", false);\n  form.setEnabled(\"rg\", false);\n  form.setEnabled(\"cpf\", false);\n  form.setEnabled(\"uf_de_emissao\", false);\n  form.setEnabled(\"orgao_expeditor\", false);\n  form.setEnabled(\"data_de_nascimento\", false);\n  form.setEnabled(\"nome_fantasia\", false);\n  form.setEnabled(\"razao_social\", false);\n  form.setEnabled(\"cnpj\", false);\n  form.setEnabled(\"cep\", false);\n  form.setEnabled(\"cidade\", false);\n  form.setEnabled(\"endereco\", false);\n  form.setEnabled(\"numero\", false);\n  form.setEnabled(\"bairro\", false);\n  form.setEnabled(\"complemento\", false);\n  form.setEnabled(\"email\", false);\n  form.setEnabled(\"contato\", false);\n}\n</code></pre> E em seguida vamos habilitando ou desabilitando os campos de acordo com os passos do processo <pre><code>if (activity == 17) {\n    form.setEnabled(\"check_validacao_documentacao\", true);\n    form.setEnabled(\"justify_validacao_documentacao\", true);\n  }\n</code></pre></p>"},{"location":"Forms/#validateform","title":"ValidateForm","text":"<p><pre><code>Esse evento \u00e9 executado antes da grava\u00e7\u00e3o dos dados do formul\u00e1rio no banco de dados. O evento recebe como par\u00e2metro uma refer\u00eancia ao formul\u00e1rio da defini\u00e7\u00e3o de formul\u00e1rio. Em caso de erros de valida\u00e7\u00e3o dos dados do formul\u00e1rio, esse evento retornar\u00e1 uma mensagem de erro para o usu\u00e1rio, atrav\u00e9s de uma modal do fluig, com a mensagem definida no evento.\n</code></pre> Padr\u00e3o do validateForm, geralmente colocado no come\u00e7o <pre><code>function validateForm(form) {\n    var activity = getValue('WKNumState');\n\n    var message = \"\";\n    var hasErros = false;\n}\n</code></pre> * O activity pega qual a TASK * O MESSAGE vazio ser\u00e1 adicionado a mensagem que voc\u00ea quiser enviar ao validar o campo *  hasErros seta o valor FALSE caso seja validado incorretamente e TRUE caso o campo esteja validado corretamente <pre><code>if (activity == 18) {\n        if (form.getValue(\"conf_parecer\") == \"\") {\n            message += getMessage('Selecione uma op\u00e7\u00e3o no parecer', 3, form);\n            hasErros = true;\n        }\n}\n</code></pre> A fun\u00e7\u00e3o getMessage possui determinados par\u00e2metros a serem seguidos :  * @param_\u00a0<code>texto</code>\u00a0\u2014 mensagem de erro ao ser apresentada ao usuario * @param <code>tipoMensagem</code>\u00a0\u2014 1 - Valida\u00e7\u00e3o de Textos; 2 - Valida\u00e7\u00e3o de Select; 3 - Valida\u00e7\u00e3o de neg\u00f3cio * @param <code>form</code>\u00a0\u2014 formul\u00e1rio</p>"},{"location":"Fun%C3%A7%C3%B5esGerais/","title":"Fun\u00e7\u00f5esGerais","text":""},{"location":"Fun%C3%A7%C3%B5esGerais/#funcoes-de-uso-geral","title":"Fun\u00e7\u00f5es de uso geral","text":""},{"location":"Fun%C3%A7%C3%B5esGerais/#abrir-modal-do-fluig","title":"Abrir modal do fluig:","text":"<pre><code>function handleOpenModal(id_button, id_modal) {\n  $(`#${id_button}`).on(\"click\", (e) =&gt; {\n    $(`#${id_modal}`).show(500);\n    $(\"#formulario\").addClass(\"modal_parent\");\n    e.stopPropagation();\n  });\n\n  $(`#${id_modal}`).on(\"click\", (e) =&gt; {\n    e.stopPropagation();\n  });\n}\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#_1","title":"Fun\u00e7\u00f5esGerais","text":"<pre><code>function handleOnChange(name, obs_id) {\n    const obs = $(`#${obs_id}`);\n    $(`#${obs_id}`).on(\"change blur keyup\", () =&gt; {\n      if (!isEmpty(obs.val())) {\n        obs.css(\"border\", \"solid 1px rgb(204,204,204)\");\n      } else {\n        obs.css(\"border\", \"solid 1px #CC3D3D\");\n      }\n    });\n  }`\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#transformar-inputs-em-spans","title":"Transformar Inputs em Spans:","text":"<pre><code>function transformInputsEmSpans(div) {\n    let inputs = $(`#${div} input`).toArray();\n    $.each(inputs, (i, item) =&gt; {\n      item.value = \"TESTESTESTESTE\"; //retirar isso\n      $(item).replaceWith($(\"&lt;br&gt;&lt;span&gt;\" + item.value + \"&lt;/span&gt;\"));\n    });\n  }\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#verificar-inputs-com-mais-de-x-caracteres","title":"Verificar Inputs com mais de X caracteres:","text":"<pre><code>let teste = $(\"input\").toArray();\n$.each(teste, (i, item) =&gt; {\n  if (item.name.length &gt; 30) {\n    console.error(\"AQ  \" + item.name);\n  }\n});\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#validacao-de-cpf","title":"Valida\u00e7\u00e3o de CPF:","text":"<pre><code>function is_cpf(cpf) {\n\n\u00a0 cpf = cpf.split('.').join('');\n\u00a0 cpf = cpf.split('/').join('');\n\u00a0 cpf = cpf.split('-').join('');\n\n\u00a0 if (cpf.length != 11) {\n\u00a0 \u00a0 return false;\n\u00a0 }\n\n\u00a0 if (cpf == \"00000000000\" ||\n\u00a0 \u00a0 cpf == \"11111111111\" ||\n\u00a0 \u00a0 cpf == \"22222222222\" ||\n\u00a0 \u00a0 cpf == \"33333333333\" ||\n\u00a0 \u00a0 cpf == \"44444444444\" ||\n\u00a0 \u00a0 cpf == \"55555555555\" ||\n\u00a0 \u00a0 cpf == \"66666666666\" ||\n\u00a0 \u00a0 cpf == \"77777777777\" ||\n\u00a0 \u00a0 cpf == \"88888888888\" ||\n\u00a0 \u00a0 cpf == \"99999999999\") {\n\u00a0 \u00a0 return false;\n\u00a0 }\n\n\u00a0 var soma = 0;\n\u00a0 for (i = 1; i &lt;= 9; i++) {\n\u00a0 \u00a0 soma = soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);\n\u00a0 }\n\n  var resto = (soma * 10) % 11;\n\n\u00a0 if ((resto == 10) || (resto == 11)) {\n\u00a0 \u00a0 resto = 0;\n\u00a0 }\n\n\u00a0 if (resto != parseInt(cpf.substring(9, 10))) {\n\u00a0 \u00a0 return false;\n\u00a0 }\n\n\u00a0 soma = 0;\n\n\u00a0 for (i = 1; i &lt;= 10; i++) {\n\u00a0 \u00a0 soma = soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);\n\u00a0 }\n\n\u00a0 resto = (soma * 10) % 11;\n\n\u00a0 if ((resto == 10) || (resto == 11)) {\n\u00a0 \u00a0 resto = 0;\n\u00a0 }\n\n\u00a0 if (resto != parseInt(cpf.substring(10, 11))) {\n\u00a0 \u00a0 return false;\n\u00a0 }\n\n\u00a0 return true;\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#validacao-de-cnpj","title":"Valida\u00e7\u00e3o de CNPJ:","text":"<pre><code>function is_cnpj(cnpj) {\n\n\u00a0 cnpj = cnpj.split('.').join('');\n\u00a0 cnpj = cnpj.split('/').join('');\n\u00a0 cnpj = cnpj.split('-').join('');\n\n\u00a0 if (cnpj.length != 14) {\n\u00a0 \u00a0 return false;\n\u00a0 }\n\u00a0 \n\u00a0 // Elimina CNPJs invalidos conhecidos\n\u00a0 if (cnpj == \"00000000000000\" ||\n\u00a0 \u00a0 cnpj == \"11111111111111\" ||\n\u00a0 \u00a0 cnpj == \"22222222222222\" ||\n\u00a0 \u00a0 cnpj == \"33333333333333\" ||\n\u00a0 \u00a0 cnpj == \"44444444444444\" ||\n\u00a0 \u00a0 cnpj == \"55555555555555\" ||\n\u00a0 \u00a0 cnpj == \"66666666666666\" ||\n\u00a0 \u00a0 cnpj == \"77777777777777\" ||\n\u00a0 \u00a0 cnpj == \"88888888888888\" ||\n\u00a0 \u00a0 cnpj == \"99999999999999\") {\n\u00a0 \u00a0 return false;\n\u00a0 }\n\n\u00a0 // Valida DVs\n\u00a0 tamanho = cnpj.length - 2;\n\u00a0 numeros = cnpj.substring(0, tamanho) + \"\";\n\u00a0 digitos = cnpj.substring(tamanho) + \"\";\n\n\u00a0 soma = 0;\n\u00a0 pos = tamanho - 7;\n\u00a0 \n\u00a0 for (i = tamanho; i &gt;= 1; i--) {\n\u00a0 \u00a0 soma += numeros.charAt(tamanho - i) * pos--;\n\u00a0 \u00a0 if (pos &lt; 2) {\n\u00a0 \u00a0 \u00a0 pos = 9;\n\u00a0 \u00a0 }\n\u00a0 }\n\n\u00a0 resultado = soma % 11 &lt; 2 ? 0 : 11 - soma % 11;\n\n\u00a0 if (resultado != digitos.charAt(0)) {\n\u00a0 \u00a0 return false;\n\u00a0 }\n\n\u00a0 tamanho = tamanho + 1;\n\u00a0 numeros = cnpj.substring(0, tamanho) + \"\";\n\u00a0 soma = 0;\n\u00a0 pos = tamanho - 7;\n\n\u00a0 for (i = tamanho; i &gt;= 1; i--) {\n\u00a0 \u00a0 soma += numeros.charAt(tamanho - i) * pos--;\n\u00a0 \u00a0 if (pos &lt; 2) {\n\u00a0 \u00a0 \u00a0 pos = 9;\n\u00a0 \u00a0 }\n\u00a0 }\n\u00a0 \n\u00a0 resultado = soma % 11 &lt; 2 ? 0 : 11 - soma % 11;\n\n\u00a0 if (resultado != digitos.charAt(1)) {\n\u00a0 \u00a0 return false;\n\u00a0 }\n\u00a0 return true;\n}\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#validacao-de-cep","title":"Valida\u00e7\u00e3o de CEP:","text":"<pre><code>async function is_cep(cep) {\n\u00a0 //arruma formata\u00e7\u00e3o cep para consulta\n\u00a0 cep = cep.split('-').join('');\n\n\u00a0 //verifica validade do cep digitado\n\u00a0 if (cep.length !== 8) {\n\u00a0 \u00a0 return false\n\u00a0 }\n\n\u00a0 //realiza consulta do cep\n\u00a0 let url = `https://viacep.com.br/ws/${cep}/json/`\n\n\u00a0 // puxa os dados da api\n\u00a0 let response = await fetch(url);\n\n\u00a0 // transforma os dados em json\n\u00a0 let data = await response.json();\n\n\u00a0 if (data.erro) {\n\u00a0 \u00a0 return false\n\u00a0 } else {\n\u00a0 \u00a0 return true\n\u00a0 }\n}\n\nValida\u00e7\u00e3o de campos vazios:\nfunction isEmpty(item) {\n\u00a0 return item == \"\" || item == undefined || item == null\n}\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#mostrar-todos-os-campos-ocultos","title":"Mostrar todos os Campos Ocultos:","text":"<pre><code>$(\"[style*='display: none']\").show()\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#pegar-valores-independente-de-_-ou-span","title":"Pegar valores independente de _  ou span:","text":"<pre><code>function getVal(id) {\n    let el = $('#' + id)\n    if (el == undefined) {\n        el = $('#_' + id)\n        if (el.is('span')) {\n            return el.text()\n        }\n        return el.val()\n    }\n    if (el.is('span')) {\n        return el.text()\n    }\n    return el.val()\n}\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#transformar-string-brl-ex-r467-para-float","title":"Transformar String BRL (ex: R$4,67) para Float:","text":"<pre><code>function transformSringBRLToFloat(valor) {\n    return parseFloat(new java.lang.String(valor)\n        .replaceAll(\"[R$ ]\", \"\")\n        .replaceAll(\"[R$]\", \"\")\n        .replaceAll(\"[./]\", \"\")\n        .replaceAll(\"[,/]\", \".\")\n        .trim());\n}\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#preencher-selects","title":"Preencher Selects:","text":"<pre><code>function getTemplatesRecibo(id, PastaId) {\n    const folderId = getFolderId(PastaId);\n    const templates = getDocument(folderId)\n    $(id).find('option').remove().end();\n    $(id).append($(\"&lt;option&gt;\", {\n        text: \"\",\n        value: \"\"\n    }))\n    $.each(templates, (i, item) =&gt; {\n        $(id).append($(\"&lt;option&gt;\", {\n            text: item.description,\n            value: item.url\n        }))\n    })\n}\n</code></pre>"},{"location":"Fun%C3%A7%C3%B5esGerais/#checar-valor-nulo","title":"Checar valor nulo:","text":"<pre><code>function isEmpty(valor) {\n  return valor == null || valor == \"\" || typeof valor === undefined;\n}\n</code></pre>"},{"location":"Introdu%C3%A7%C3%B5es/","title":"Introdu\u00e7\u00f5es","text":""},{"location":"Introdu%C3%A7%C3%B5es/#como-fazer","title":"Como fazer?","text":""},{"location":"Introdu%C3%A7%C3%B5es/#paixfilho","title":"PaiXFilho","text":"<p>Este \u00e9 um exemplo simples de uma tabela Pai x Filho</p> <pre><code> &lt;table border=\"1\" tablename=\"teste\" addbuttonlabel=\"Adicionar Filho\" customFnDelete=\"fnCustomDelete(this)\"&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;td&gt;&lt;b&gt;Nome&lt;/b&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;b&gt;Idade&lt;/b&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;b&gt;\n                &lt;font face=\"arial\" size=5 color=\"blue\"&gt;Sim:\n              &lt;/b&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;b&gt;\n                &lt;font face=\"arial\" size=5 color=\"blue\"&gt;N\u00e3o:\n              &lt;/b&gt;&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tr&gt;\n          &lt;td&gt;&lt;input type=\"text\" name=\"nomefilho\"&gt;&lt;/td&gt;\n          &lt;td&gt;&lt;input type=\"text\" name=\"idadefilho\"&gt;&lt;/td&gt;\n          &lt;td&gt;&lt;input type=\"radio\" name=\"nameradiofilho\" id=\"idsimfilho\" value=\"ant_yes\"&gt;&lt;/td&gt;\n          &lt;td&gt;&lt;input type=\"radio\" name=\"nameradiofilho\" id=\"idnaofilho\" value=\"ant_no\"&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n</code></pre> <p>Segundo a documenta\u00e7\u00e3o do TDN FLuig(), tablename=\"teste\"&gt; - A propriedade tablename determina que Agora abaixo dessa tabela ser\u00e1 implementado um sistema de <code>pai filho</code> dentro da defini\u00e7\u00e3o de formul\u00e1rio. A tag <code>table</code> ter\u00e1 seus par\u00e2metros varridos na busca de outros par\u00e2metros relacionados \u00e0 t\u00e9cnica que ser\u00e3o explicados mais adiante nesse texto. Ser\u00e1 criada uma outra <code>table</code> ao redor da tabela principal que conter\u00e1 um  bot\u00e3o que permite adicionar novos filhos. Isso n\u00e3o ocorrer\u00e1 apenas em casos em que a propriedade noaddbutton tamb\u00e9m seja informada em conjunto com  a propriedade tablename.                                     </p> <p>Existem algumas propriedades da tabela pai x filho que podem ser usadas no desenvolvimento dos formul\u00e1rios.</p> <p><code>nonoaddbutton</code> - Remove o bot\u00e3o padr\u00e3o de deletar os filhos, permitindo implementar outro modo de excluir <pre><code>&lt;table tablename=\"teste\" nodeletebutton=true&gt;\n</code></pre> <code>addbuttonlabel</code> - Determina o texto do bot\u00e3o de adicionar filho (opcional) <pre><code> &lt;table tablename=\"teste\" addbuttonlabel=\"Adicionar novo ingrediente\"&gt;\n</code></pre> <code>customFnDelete</code> - Permite a customiza\u00e7\u00e3o da fun\u00e7\u00e3o que \u00e9 chamada ao clicar no bot\u00e3o que elimina um filho da tabela.</p> <pre><code>  function fnCustomDelete(oElement) {\n    FLUIGC.toast({\n      title: 'Aviso: ',\n      message: 'Filho exclu\u00eddo com sucesso!',\n      type: 'success'\n    });\n    fnWdkRemoveChild(oElement);\n  }\n</code></pre> <p>Algumas informa\u00e7\u00f5es importantes : <pre><code>N\u00e3o est\u00e3o dispon\u00edveis para serem utilizados como descri\u00e7\u00e3o dos registros de formul\u00e1rios na configura\u00e7\u00e3o do formul\u00e1rio;\n</code></pre> <pre><code>n\u00e3o devem ser colocados no \"head\" ou \"footer\" de um HTML pois eles n\u00e3o ser\u00e3o considerados, coloque os campos apenas no \"body\".\n</code></pre> <pre><code>O \u00edndice de formul\u00e1rio pai e filho \u00e9 utilizado da seguinte forma ex: indice___1. Em input din\u00e2micos n\u00e3o \u00e9 recomendado adicionar valores no atributo name ap\u00f3s o indice.\n</code></pre> <pre><code>Para utilizar campos radio button, al\u00e9m da defini\u00e7\u00e3o padr\u00e3o do componente html, \u00e9 necess\u00e1rio que seja utilizado o atributo \u2018value\u2019 para os dados serem salvos corretamente.\n</code></pre></p> <p>\u00c9 poss\u00edvel utilizar apenas alguns elementos html:</p> <ul> <li>text</li> <li>radio button</li> <li>checkbox</li> <li>select</li> <li>select multiple</li> <li>shidden</li> <li>textarea</li> <li>image</li> <li>button</li> </ul>"},{"location":"Introdu%C3%A7%C3%B5es/#como-criar-um-evento-de-formulario","title":"Como criar um evento de formul\u00e1rio?","text":"<p>Os eventos de formul\u00e1rios s\u00e3o um conjunto de scripts carregados pela API de Formul\u00e1rios, os quais s\u00e3o desenvolvidos utilizando Javascript e s\u00e3o chamados durante a execu\u00e7\u00e3o de a\u00e7\u00e3o em formul\u00e1rios ou em momentos espec\u00edficos de intera\u00e7\u00e3o em formul\u00e1rios.</p> <p>Geralmente em quase todos os nossos formul\u00e1rios est\u00e3o presentes tr\u00eas destes eventos, displayFields, enableFields e validateForm.</p> <p>Para criar um evento de formul\u00e1rio \u00e9 preciso seguir os passos: * Bot\u00e3o direito no Package Explorer do eclipse &gt; New &gt; Fluig Script &gt; Script Evento da Defini\u00e7\u00e3o de Formul\u00e1rio * E por \u00faltimo relacionar o formul\u00e1rio o qual voc\u00ea quer utilizar o evento</p>"},{"location":"Introdu%C3%A7%C3%B5es/#referencias","title":"Referencias","text":"<p>Eventos de Formul\u00e1rio - TDN</p>"},{"location":"Introdu%C3%A7%C3%B5es/#como-criar-um-evento-de-processo","title":"Como criar um evento de processo?","text":"<p>Os eventos de um processo s\u00e3o um conjunto de scripts carregados pela API de workflow. Tais scripts s\u00e3o desenvolvidos com o uso da linguagem JavaScript e chamados ao longo da execu\u00e7\u00e3o do processo em momentos predeterminados, como por exemplo a cria\u00e7\u00e3o da solicita\u00e7\u00e3o do processo ou a entrada em uma nova atividade.</p> <p>Para criar um evento BeforeTaskSave ( o qual \u00e9 executado sempre no in\u00edcio) ou AfterProcess (executado no final)</p> <p>\u00c9 preciso seguir os passos: * Bot\u00e3o direito no Package Explorer do eclipse &gt; New &gt; Fluig Script &gt; Script Evento Workflow &gt; Nome do evento(Before ou After) * E por \u00faltimo relacionar o processo o qual voc\u00ea quer utilizar o evento</p> <p>Na utiliza\u00e7\u00e3o desses dois tipos de script \u00e9 comum setar o n\u00famero do processo no AfterProcessCreate</p>"},{"location":"Introdu%C3%A7%C3%B5es/#referencias_1","title":"Referencias","text":"<p>Link Eventos de Processo - TDN</p>"},{"location":"Introdu%C3%A7%C3%B5es/#como-criar-um-evento-de-global","title":"Como criar um evento de global?","text":"<p>Os eventos globais do fluig s\u00e3o executados pela plataforma antes ou ap\u00f3s alguma a\u00e7\u00e3o ocorrer (Ex: Aprova\u00e7\u00e3o de documento, movimenta\u00e7\u00e3o de processo, publica\u00e7\u00e3o de coment\u00e1rio etc). Tais eventos podem ser personalizados atrav\u00e9s da linguagem Javascript. Os eventos s\u00e3o divididos em eventos do tipo before, que ocorre antes que a a\u00e7\u00e3o que disparou o evento seja efetivada e do tipo after, que ocorre ap\u00f3s a a\u00e7\u00e3o acontecer.</p> <p>Para criar um evento global \u00e9 preciso seguir os passos: * Bot\u00e3o direito no Package Explorer do eclipse &gt; New &gt; Fluig Global Event  * E por \u00faltimo relacionar o servidor e o evento global</p>"},{"location":"Introdu%C3%A7%C3%B5es/#referencias_2","title":"Referencias","text":"<p>Link Eventos de Globais - TDN</p>"},{"location":"M%C3%A1scaras/","title":"M\u00e1scaras","text":""},{"location":"M%C3%A1scaras/#mascaras-jquery","title":"M\u00e1scaras jQuery","text":""},{"location":"M%C3%A1scaras/#mascaras-usando-a-lib-imask","title":"M\u00e1scaras usando a lib IMask","text":""},{"location":"M%C3%A1scaras/#mask-cpf","title":"Mask CPF","text":"<pre><code>IMask(document.getElementById('cpf'), { mask: '000.000.000-00' })\n</code></pre>"},{"location":"M%C3%A1scaras/#mask-rg","title":"Mask RG","text":"<pre><code>IMask(document.getElementById('rg'), { mask: '000.000.000' })\n</code></pre>"},{"location":"M%C3%A1scaras/#mask-cnpj","title":"Mask CNPJ","text":"<pre><code>IMask(document.getElementById('cnpj'), { mask: '00.000.000/0000-00' })\n</code></pre>"},{"location":"M%C3%A1scaras/#mask-numero-celular","title":"Mask N\u00famero celular","text":"<pre><code>IMask(document.getElementById('contato'), { mask: '(00) 00000-0000' })\n</code></pre>"},{"location":"M%C3%A1scaras/#mask-cep","title":"Mask CEP","text":"<pre><code>IMask(document.getElementById('cep'), { mask: '00000-000' })\n</code></pre>"},{"location":"M%C3%A1scaras/#mask-datas","title":"Mask Datas","text":"<pre><code>IMask(document.getElementById('data_de_nascimento'), {\n    mask: Date,\n    pattern: 'd/`m/`Y',\n    blocks: {\n        d: {\n            mask: IMask.MaskedRange,\n            from: 1,\n            to: 31,\n            maxLength: 2,\n        },\n        m: {\n            mask: IMask.MaskedRange,\n            from: 1,\n            to: 12,\n            maxLength: 2,\n        },\n        Y: {\n            mask: IMask.MaskedRange,\n            from: 19000,\n            to: 20230,\n            maxLength: 4,\n        },\n    },\n})\n</code></pre>"},{"location":"M%C3%A1scaras/#mask-valores","title":"Mask Valores","text":"<pre><code>Mask Valores:\n    IMask(document.getElementById(\"valor_solucao\"), {\n\n\u00a0 \u00a0 \u00a0 \u00a0 mask: \"R$ num\",\n\u00a0 \u00a0 \u00a0 \u00a0 blocks: {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 num: {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mask: Number,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 thousandsSeparator: \".\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 padFractionalZeros: true,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 normalizeZeros: true,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 radix: \",\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 });\n</code></pre>"},{"location":"datasets/","title":"Datasets","text":""},{"location":"datasets/#datasets","title":"Datasets","text":""},{"location":"datasets/#utilizando-datasets","title":"Utilizando datasets","text":"<p>Para utilizar datasets precisamos entender alguns conceitos b\u00e1sicos antes. O consumo de datasets no fluig exige o uso de 3 parametros que s\u00e3o:  </p> <p>\u2022 Nome do dataset: Geralmente voc\u00ea vai chamar pelo nome que \u00e9 encontrado na aba datasets no painel de controle do Fluig (lembrando que esse valor \u00e9 uma string, ent\u00e3o sempre chamar o nome do dataset entre aspas).</p> <p>\u2022 returnFields: Esse par\u00e2metro se refere aos valores que voc\u00ea deseja que retorne do dataset, nesse campo chamamos uma string com o nome da coluna que desejamos obter.</p> <p>\u2022 constraints: Esse campo serve para filtrar o dataset, para criar uma constraint usamos a fun\u00e7\u00e3o DatasetFactory.createConstraint(\"colunaDoDataset\", inicioDoFiltro, fimDoFiltro, ConstraintType.MUST), ConstraintType pode ter tr\u00eas valores poss\u00edveis .MUST (indica que todos os registros do Dataset devem satisfazer a esta condi\u00e7\u00e3o), .SHOULD (indica que os registros do Dataset podem ou n\u00e3o atender \u00e0 condi\u00e7\u00e3o. Esse tipo \u00e9 mais comum quando se necessita que um mesmo campo tenha valores A ou B) ou .MUST_NOT (indica que nenhum dos registros pode satisfazer a condi\u00e7\u00e3o).  Normalmente criamos as constraints como c1, c2, c3... e juntamos todas em uma vari\u00e1vel constraints usando new Array(c1, c2, c3...);</p> <p>\u2022 sortingFields: Esse par\u00e2metro serve para ordenar os valores filtrados e essa ordena\u00e7\u00e3o \u00e9 feita de forma ascendente, caso atribua o valor null no canto desse par\u00e2metro na fun\u00e7\u00e3o em que ele deve ser chamado, o dataset n\u00e3o realizara a ordena\u00e7\u00e3o. Costumamos usar como null pois a ordena\u00e7\u00e3o afeta no desempenho do processo, mas quando for necess\u00e1rio a ordena\u00e7\u00e3o, vale a pena usar esse par\u00e2metro.</p> <p>\u2022 return: ao final criamos a vari\u00e1vel dataset, que ser\u00e1 onde os valores que queremos ser\u00e3o armazenados, para isso usamos a fun\u00e7\u00e3o DatasetFactory.getDataset(\"NomeDoDataset\", returnFields, constraints, sortingFields).</p> <p><pre><code>var c1 = DatasetFactory.createConstraint(\"cardDocumentId\", documentId, documentId, ConstraintType.MUST);\n    var constraints = new Array(c1);\n    var returnFields = new Array(\"workflowProcessPK.processInstanceId\")\n    var sortingFields = new Array(\"cardDocumentId\");\n    var dataset = DatasetFactory.getDataset(\"workflowProcess\", returnFields, constraints, null);\n    return dataset.values;\n</code></pre> Na vari\u00e1vel DATASET est\u00e1 o comando completo que ser\u00e1 usado  <pre><code>var dataset = DatasetFactory.getDataset(tabela, returnFields(campos retornados), constraints(c1), null(ordena\u00e7\u00e3o))\n</code></pre> Para utilizar o datasetFactory no front \u00e9 necess\u00e1rio utilizar a seguinte importa\u00e7\u00e3o <pre><code>&lt;script type=\"text/javascript\" src=\"/webdesk/vcXMLRPC.js\"&gt;&lt;/script&gt;\n</code></pre></p>"},{"location":"datasets/#funcoes-em-datasets","title":"Fun\u00e7\u00f5es em Datasets","text":""},{"location":"datasets/#pegar-filhos-de-um-paixfilho","title":"pegar filhos de um PaiXFilho","text":"<pre><code>function getFormChildren(datasetId, documentId, tablename) {     \n  const c1 = DatasetFactory.createConstraint(\"documentid\", documentId, documentId, ConstraintType.MUST);     \n  const c2 = DatasetFactory.createConstraint(\"tablename\", tablename, tablename, ConstraintType.MUST);     \n  const c3 = DatasetFactory.createConstraint(\"metadata#active\", \"true\", \"true\", ConstraintType.MUST);     \n  const constraints = new Array(c1, c2, c3);     \n  const result = DatasetFactory.getDataset(datasetId, null, constraints, null);     \n  return result; \n}\n</code></pre>"},{"location":"datasets/#alterar-o-valor-de-qualquer-campo-de-qualquer-solicitacao","title":"Alterar o valor de qualquer campo de qualquer solicita\u00e7\u00e3o:","text":"<pre><code>function setValue(numProcess, fieldName, fieldValue) {\n    const documentId = getDocumentId(numProcess);\n            let c4 = DatasetFactory.createConstraint('sqlLimit', '300', '300', ConstraintType.MUST)\n    const c1 = DatasetFactory.createConstraint(\"documentid\", documentId, documentId, ConstraintType.MUST);\n            const c2 = DatasetFactory.createConstraint(\"fieldName\", fieldName, fieldName, ConstraintType.MUST);\n            const c3 = DatasetFactory.createConstraint(\"fieldValue\", fieldValue, fieldValue, ConstraintType.MUST);\n            const constraints = new Array(c1, c2, c3, c4);\n            const result = DatasetFactory.getDataset(\"dsSetCardValue\", null, constraints, null);\n    return result;\n}\n\nfunction getDocumentId(numProcess) {  \n    const c1 = DatasetFactory.createConstraint(\"workflowProcessPK.processInstanceId\", numProcess, numProcess, ConstraintType.MUST);  \n    let c4 = DatasetFactory.createConstraint('sqlLimit', '300', '300', ConstraintType.MUST)  \n    const constraints = new Array(c1, c4);  \n    const returnFields = new Array(\"cardIndexDocumentId\", \"cardDocumentId\");  \n    const dataset = DatasetFactory.getDataset(\"workflowProcess\", returnFields, constraints, null);  \n    return dataset.values[0].cardDocumentId;  \n    }  \n// setValue(\"ID_AQUI\", 'CAMPO', 'VALOR')\n</code></pre>"},{"location":"datasets/#pegar-numero-de-processo","title":"Pegar n\u00famero de processo:","text":"<pre><code>function getNumProcess(documentId) {\n    var c1 = DatasetFactory.createConstraint(\"cardDocumentId\", documentId, documentId, ConstraintType.MUST);\n    var constraints = new Array(c1);\n    var returnFields = new Array(\"workflowProcessPK.processInstanceId\")\n    var dataset = DatasetFactory.getDataset(\"workflowProcess\", returnFields, constraints, null);\n    var numProces = dataset.getValue(0, \"workflowProcessPK.processInstanceId\");\n    return numProces;\n}\n</code></pre>"},{"location":"datasets/#sincronizacao-de-datasets","title":"Sincroniza\u00e7\u00e3o de datasets","text":""},{"location":"datasets/#na-criacao-de-datasets-o-fluig-nos-da-4-funcoes","title":"Na cria\u00e7\u00e3o de datasets o fluig nos da 4 fun\u00e7\u00f5es","text":"<p>Com essas fun\u00e7\u00f5es \u00e9 poss\u00edvel realizar a sincroniza\u00e7\u00e3o dos datasets criados.</p> <p>defineStructure - Ir\u00e1 definir a estrutura do nosso dataset e ir\u00e1 setar uma chave prim\u00e1ria <pre><code>function defineStructure() {\n    addColumn(\"CODCOLIGADA\");\n    addColumn(\"IDMOV\");\n    addColumn(\"HISTORICO\");\n    addColumn(\"PASSAGEIRO\");\n    addColumn(\"CADASTRANTE\");\n    addColumn(\"SOLICITANTE\");\n    addColumn(\"AUTORIZANTE\");\n    setKey([\"CODCOLIGADA\"]);\n}();\n</code></pre> onSync - \u00c9 chamado quando se coloca o fluig para sincronizar o dataset <pre><code>function onSync(lastSyncDate) {\n\n\n    var dataset = DatasetBuilder.newDataset();\n    var newerDataset = createDataset();\n    var olderDataset = DatasetFactory.getDataset(\"dsProcessoViagemTMOV\", null, null, null);\n\n    var ifNull = function (value, ifNullValue) {\n        return value == null || value == \"\" ? ifNullValue : value;\n    }\n\n    if (newerDataset != null) {\n        var updated = [];\n\n        for (var i = 0; i &lt; newerDataset.rowsCount; i++) {\n            dataset.addOrUpdateRow([\n                ifNull(newerDataset.getValue(i, \"CODCOLIGADA\"), \"\"),\n                ifNull(newerDataset.getValue(i, \"IDMOV\"), \"\"),\n                ifNull(newerDataset.getValue(i, \"HISTORICO\"), \"\"),\n                ifNull(newerDataset.getValue(i, \"PASSAGEIRO\"), \"\"),\n                ifNull(newerDataset.getValue(i, \"CADASTRANTE\"), \"\"),\n                ifNull(newerDataset.getValue(i, \"SOLICITANTE\"), \"\"),\n                ifNull(newerDataset.getValue(i, \"AUTORIZANTE\"), \"\")\n            ]);\n            updated.push(newerDataset.getValue(i, \"CODCOLIGADA\"));\n        }\n\n        if (olderDataset != null) {\n            for (var i = 0; i &lt; olderDataset.rowsCount; i++) {\n                if (updated.indexOf(olderDataset.getValue(i, \"CODCOLIGADA\") == -1)) {\n                    dataset.deleteRow([\n                        ifNull(olderDataset.getValue(i, \"CODCOLIGADA\"), \"\"),\n                        ifNull(olderDataset.getValue(i, \"IDMOV\"), \"\"),\n                        ifNull(olderDataset.getValue(i, \"HISTORICO\"), \"\"),\n                        ifNull(olderDataset.getValue(i, \"PASSAGEIRO\"), \"\"),\n                        ifNull(olderDataset.getValue(i, \"CADASTRANTE\"), \"\"),\n                        ifNull(olderDataset.getValue(i, \"SOLICITANTE\"), \"\"),\n                        ifNull(olderDataset.getValue(i, \"AUTORIZANTE\"), \"\")\n                    ]);\n                }\n            }\n        }\n    }\n\n    return dataset;\n\n}\n</code></pre> createDataset - Cria o Dataset para consulta, recebe como par\u00e2metros os campos, as contraints e a ordena\u00e7\u00e3o. <pre><code>function createDataset(fields, constraints, sortFields) {\n    try {\n        var result;\n        var dataset = DatasetBuilder.newDataset();\n        dataset.addColumn(\"CODCOLIGADA\");\n        dataset.addColumn(\"IDMOV\");\n        dataset.addColumn(\"HISTORICO\");\n        dataset.addColumn(\"PASSAGEIRO\");\n        dataset.addColumn(\"CADASTRANTE\");\n        dataset.addColumn(\"SOLICITANTE\");\n        dataset.addColumn(\"AUTORIZANTE\");\n\n        var IDMOV = 987788;\n\n        var endpoint = '/api/framework/v1/consultaSQLServer/RealizaConsulta/WSDiariaTMOV/21/T?parameters=IDMOV=' + IDMOV;\n        var clientService = fluigAPI.getAuthorizeClientService();\n        var data = {\n            companyId: 1 + '',\n            serviceCode: 'RM_WSDATASERVER_REST',\n            endpoint: endpoint + '',\n            method: 'get',\n            timeoutService: '100',\n            options: {\n                encoding: 'UTF-8',\n                mediaType: 'application/json'\n            },\n            headers: {},\n            params: {}\n        }\n\n        try {\n            result = clientService.invoke(JSON.stringify(data));\n        } catch (e) {\n            throw \"dsProcessoViagemTMOV =&gt; N\u00e3o se conectou ao endpoint REST do RM: \" + e + \"\";\n        }\n\n        result = JSON.parse(result.getResult())\n\n        if (result.length &gt; 0) {\n            for (var i = 0; i &lt; result.length; i++) {\n                var item = result[i];\n                dataset.addRow(new Array(\n                    item.CODCOLIGADA.toString(),\n                    item.IDMOV.toString(),\n                    item.HISTORICO.toString(),\n                    item.PASSAGEIRO.toString(),\n                    item.CADASTRANTE.toString(),\n                    item.SOLICITANTE.toString(),\n                    item.AUTORIZANTE.toString()\n                ));\n            }\n        } else {\n            throw \"dsProcessoViagemTMOV =======&gt; N\u00e3o existem dados\"\n        }\n\n        return dataset\n    } catch(e) {\n        throw \"dsProcessoViagemTMOV ======&gt; Ocorreu um erro ao iniciar a cria\u00e7\u00e3o do dataset: \" + e + \"\";\n    }\n}\n</code></pre> onMobileSync - Essa fun\u00e7\u00e3o \u00e9 espec\u00edfica para o uso de datasets em aplicativos m\u00f3veis. Ela permite que voc\u00ea sincronize dados entre o aplicativo m\u00f3vel e o servidor do Fluig.  <pre><code>function onMobileSync(user) {\n\n}\n</code></pre></p> <p>var dsName = \"dsConsultaFuncionarioJornalizado\"; var objColumn = [     { NAME: \"EMAIL\", TYPE: \"\", KEY: true },     { NAME: \"NOME\", TYPE: \"\", KEY: false },     { NAME: \"CODUSUARIO\", TYPE: \"\", KEY: false },     { NAME: \"CODSITUACAO\", TYPE: \"\", KEY: false },     { NAME: \"CODVEN\", TYPE: \"\", KEY: false }, ];</p> <p>function defineStructure() {     let key = [];     objColumn.forEach(function (row) {         let type = undefined;         if (row.TYPE == \"NUMBER\") {             type = DatasetFieldType.NUMBER;         }         if (row.KEY) {             key.push(row.NAME);         }         addColumn(row.NAME, type);</p> <pre><code>});\n\nif (key.length &gt; 0) {\n    setKey(key);\n    addIndex(key);\n}\n</code></pre> <p>}</p>"},{"location":"datasets/#datasets-jornalizados","title":"Datasets jornalizados","text":""},{"location":"datasets/#sincronizacao-de-dataset-jornalizado","title":"Sincroniza\u00e7\u00e3o de dataset jornalizado","text":"<p>O c\u00f3digo faz uma sincroniza\u00e7\u00e3o com um dataset existente, atualizando os registros que existirem no dataset e adicionando os novos registros. Caso n\u00e3o haja nenhum registro no dataset, o dataset jornalizado ficar\u00e1 como estava e n\u00e3o vai sincronizar. (Evita problema em que na sincroniza\u00e7\u00e3o com o RM um dataset ficava vazio, com um jornalizado ele mant\u00e9m os dados) <pre><code>function onSync(lastSyncDate) {\n    const dataset = DatasetBuilder.newDataset();\n    const newerDataset = createDataset();\n    const olderDataset = DatasetFactory.getDataset('dsConsultaFuncionarioJornalizado', null, null, null);\n\n    // Condi\u00e7\u00f5es\n    // 1. Insert (addRow): Existe no newerDataset e n\u00e3o existe no olderDataset\n    // 2. Update (updateRow): Existe no newerDataset e existe no olderDataset\n    // 3. Delete (deleteRow): Existe no olderDataset e n\u00e3o existe no newerDataset\n\n    try {\n        let startTime = java.lang.System.nanoTime();\n\n        if (olderDataset != null || olderDataset != undefined) {\n            if(olderDataset.rowsCount == 0 &amp;&amp; newerDataset != undefined &amp;&amp; newerDataset != null){\n                for (let i = 0; i &lt; newerDataset.rowsCount; i++) {\n                    let valuesArray = [];\n                    objColumn.forEach(function (column) {\n                        valuesArray.push(newerDataset.getValue(i, column.NAME));\n                    });\n                    dataset.addRow(valuesArray);\n                }\n                return dataset;\n            }\n        }\n\n        //VERICA SE 0 DATASET SINCRONIZADO EST\u00c1 VAZIO\n        if (newerDataset != undefined &amp;&amp; newerDataset != null) {\n            let keys = 0\n            let adicionados = 0\n            let deletados = 0\n            let atualizados = 0\n\n            let oldDataMap = new java.util.HashMap();\n\n            //MONTA UM HASHMAP COM OS DADOS DO DATASET ANTIGO\n            for (let j = 0; j &lt; olderDataset.rowsCount; j++) {\n                let key = \"\";\n                let rowObject = {};\n\n                objColumn.forEach(function (column) {\n                    let columnName = column.NAME;\n                    rowObject[columnName] = olderDataset.getValue(j, columnName);\n                    if (column.KEY) {\n                        key += olderDataset.getValue(j, columnName);\n                    }\n                });\n\n                oldDataMap.put(key, rowObject);\n            }\n\n            log.dir(\"Sincronizando dataset jornalizado: \" + dsName)\n            log.dir(\"Quantidade de linhas do novo dataset: \" + newerDataset.rowsCount)\n            log.dir(\"Quantidade de linhas do antigo dataset: \" + olderDataset.rowsCount)\n\n            //PERCORRE O NOVO DATASET\n            for (let i = 0; i &lt; newerDataset.rowsCount; i++) {\n                let newerKey = \"\";\n\n                //MONTA A CHAVE DE COMPARA\u00c7\u00c3O USANDO A MESMA LOGICA QUE FOI UTILIZADA NO HASHMAP\n                objColumn.forEach(function (column) {\n                    if (column.KEY) {\n                        newerKey += newerDataset.getValue(i, column.NAME);\n                    }\n                });\n\n                // VERIFICA SE A CHAVE EXISTE NO HASHMAP\n                if (oldDataMap.containsKey(newerKey)) {\n                    keys++\n                    let oldRow = oldDataMap.get(newerKey);\n                    let shouldUpdate = false;\n                    let valuesArray = [];\n\n                    // VERIFICA SE O REGISTRO FOI ALTERADO\n                    objColumn.forEach(function (column) {\n                        let columnName = column.NAME;\n                        let newValue = newerDataset.getValue(i, columnName);\n                        valuesArray.push(newValue);\n                        if (newValue != oldRow[columnName]) {\n                            shouldUpdate = true;\n                        }\n                    });\n\n                    if (shouldUpdate) {\n                        atualizados++;\n                        dataset.updateRow(valuesArray);\n                    }\n\n                    // COMO O REGISTRO EXISTE NOS DOIS DATASETS, DEVE SER REMOVIDO DO HASHMAP PARA QUE NO FINAL SOBREM APENAS OS REGISTROS QUE DEVEM SER DELETADOS\n                    oldDataMap.remove(newerKey);\n\n                } else {\n                    // SE ELE EXISTIR NO NOVO DATASET E N\u00c3O EXISTIR NO ANTIGO, ADICIONA\n                    adicionados++;\n                    let valuesArray = [];\n                    objColumn.forEach(function (column) {\n                        valuesArray.push(newerDataset.getValue(i, column.NAME));\n                    });\n\n                    dataset.addRow(valuesArray);\n                }\n            }\n\n            // REGISTROS QUE SOBRARAM NO HASHMAP, OU SEJA, REGISTROS QUE EXISTEM NO ANTIGO MAS N\u00c3O EXISTEM NO NOVO, DEVEM SER DELETADOS\n            let iterator = oldDataMap.keySet().iterator();\n            while (iterator.hasNext()) {\n                let key = iterator.next();\n                deletados++;\n                let oldRow = oldDataMap.get(key);\n                let valuesArray = [];\n                objColumn.forEach(function (column) {\n                    valuesArray.push(oldRow[column.NAME]);\n                });\n\n                dataset.deleteRow(valuesArray);\n            }\n\n            log.dir(\"Dados da sincroniza\u00e7\u00e3o do dataset jornalizado: \" + dsName)\n            log.dir(\"Quantidade de keys que deram match: \" + keys)\n            log.dir(\"Quantidade de adicionados: \" + adicionados)\n            log.dir(\"Quantidade de deletados: \" + deletados)\n            log.dir(\"Quantidade de atualizados: \" + atualizados)\n\n            let endTime = java.lang.System.nanoTime();\n            let duration = (endTime - startTime) / 1000000;\n            log.info(\"Tempo de execu\u00e7\u00e3o: \" + duration + \" ms\");\n\n        } else {\n            reportErro(\"retornoVazio\");\n        }\n    } catch (e) {\n        reportErro(\"erroAoSincronizar\");\n        throw new Error('Erro ao sincronizar ' + e);\n    }\n    return dataset;\n}\n\n\nfunction createDataset(fields, constraints, sortFields) {\n\n    try {\n        const dataset = DatasetBuilder.newDataset();\n\n        const syncedDs = DatasetFactory.getDataset('dsConsultaFuncionario', null, null, null); // dataset sincronizado ou fonte de dados\n\n        if (syncedDs == null) {\n            throw new Error('Erro ao sincronizar');\n        }\n\n        if (syncedDs.rowsCount &lt;= 1) {\n            throw new Error('Erro ao sincronizar');\n        }\n\n        buildRows(dataset, syncedDs)\n        return dataset\n\n    } catch (e) {\n        reportErro(\"retornoVazio\");\n    }\n\n}\n\nfunction buildRows(dataset, res) {\n    // Adiciona as colunas\n    for (var i = 0; i &lt; res.columnsName.length; i++) {\n        dataset.addColumn(res.columnsName[i]);\n    }\n\n    // adiciona as rows\n    for (var i = 0; i &lt; res.values.length; i++) {\n        dataset.addRow(res.values[i]);\n    }\n}\n\nfunction reportErro(template) {\n    const c1 = DatasetFactory.createConstraint(\"TEMPLATE\", template, template, ConstraintType.MUST);\n    const c2 = DatasetFactory.createConstraint(\"DATASETNAME\", dsName, dsName, ConstraintType.MUST);\n    const constraints = [c1, c2];\n    DatasetFactory.getDataset(\"dsJornalizadosEnviaEmail\", null, constraints, null);\n}\n</code></pre></p>"},{"location":"fluighub/","title":"Fluighub","text":""},{"location":"fluighub/#fluighub","title":"Fluighub","text":""},{"location":"fluighub/#o-que-e-o-fluighub","title":"O que \u00e9 o Fluighub?","text":"<p>Aplica\u00e7\u00e3o intermedi\u00e1ria para a comunica\u00e7\u00e3o com a API da Totvs e recursos adcionais.</p>"},{"location":"fluighub/#como-utilizar","title":"Como utilizar?","text":"<p>Toda a documenta\u00e7\u00e3o est\u00e1 dispon\u00edvel em Fluighub</p>"},{"location":"inicio/","title":"Inicio","text":""},{"location":"inicio/#primeiros-passos","title":"Primeiros passos","text":"<p>Para fazer uso do Fluig \u00e9 necess\u00e1rio alguns passos b\u00e1sicos:        1 -  Instala\u00e7\u00e3o do OpenJDK 8 <code>sudo apt-get install openjdk-8-jdk</code>        2 -  Mude a vers\u00e3o atual do java na linha de comando use <code>sudo update-alternatives --config java</code> e selecione o n\u00famero correspondente ao OpenJDK 8.        3 -  Baixar e instalar o Eclipse IDE        4 -  Acesse Fluig Academy e crie sua conta.        5 -  Instalar Fluig studio para o eclipse Como instalar o Fluig Studio        6 -  Baixar IDE de prefer\u00eancia (Intellij, Visual Studio Code, Eclipse, Netbeans, etc)</p>"},{"location":"inicio/#treinamento-base-para-desenvolvimento-do-fluig","title":"Treinamento base para desenvolvimento do Fluig:","text":"<p>Treinamentos indicados para iniciantes no Fluig Academy:     - TOTVS Fluig Academy - TOTVS Fluig Dev Start     - TOTVS Fluig Academy - Iniciando o desenvolvimento de widgets     - TOTVS Fluig Academy - Desenvolvimento de Processos - BPM/ECM Intermediate     - TOTVS Fluig Academy - Desenvolvimento de Processos - BPM/ECM Advanced</p>"},{"location":"process/","title":"Process","text":""},{"location":"process/#processos","title":"Processos","text":""},{"location":"widgets/","title":"Widgets","text":""},{"location":"widgets/#widgets","title":"Widgets","text":""}]}